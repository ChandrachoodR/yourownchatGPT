<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ChatGPT UI</title>
    <link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet">
</head>

<body class="bg-gray-800 text-white min-h-screen flex items-center justify-center">
    <div class="w-full max-w-md">
        <div id="chatArea" class="bg-gray-700 p-4 rounded shadow-md mb-4 overflow-auto h-64">
        </div>
        <div>
            <input id="promptInput" type="text" class="w-full px-3 py-2 text-gray-700 border rounded-lg focus:outline-none" placeholder="Type your message..." />
            <button id="sendButton" class="mt-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Send</button>
        </div>
    </div>

    <script>
        const chatArea = document.getElementById('chatArea');
        const promptInput = document.getElementById('promptInput');
        const sendButton = document.getElementById('sendButton');
        const apiKey = 'your API Key here';  // replace this with your actual API key

        sendButton.onclick = () => {
            const prompt = promptInput.value;
            promptInput.value = '';
            chatArea.innerHTML += `<div class="bg-blue-500 text-white p-2 mt-2 rounded-lg w-3/4 float-right clear-both">You: ${prompt}</div>`;

            fetch('https://api.openai.com/v1/completions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + apiKey
                },
                body: JSON.stringify({
                    'model': 'text-davinci-003',
                    'prompt': prompt,
                    'max_tokens': 60
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`API request failed with status ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.choices && data.choices.length > 0) {
                    const reply = data.choices[0].text.trim();
                    chatArea.innerHTML += `<div class="bg-gray-500 text-white p-2 mt-2 rounded-lg w-3/4 float-left clear-both">GPT-3: ${reply}</div>`;
                } else {
                    throw new Error(data.error.message || 'Unexpected error');
                }
                chatArea.scrollTop = chatArea.scrollHeight;
            })
            .catch(error => {
                chatArea.innerHTML += `<div class="bg-red-500 text-white p-2 mt-2 rounded-lg w-full float-left clear-both">Error: ${error.message}</div>`;
                chatArea.scrollTop = chatArea.scrollHeight;
            });
        };
    </script>
</body>

</html>
